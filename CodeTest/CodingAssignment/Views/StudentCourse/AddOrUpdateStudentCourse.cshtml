@model CodingAssignment.DTOs.StudentCourse

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.StudentId)
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label(nameof(Model.Course), htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @if (ViewBag.CourseListDisabled == false) {
                        @Html.DropDownListFor(model => model.CourseId, ViewBag.CourseSelectList as List<SelectListItem>, "Select Course", new { @class = "form-control" })
                    }
                    else {
                        @Html.DropDownListFor(model => model.CourseId, ViewBag.CourseSelectList as List<SelectListItem>, "Select Course", new { @class = "form-control", disabled="disabled" })
                    }
                    @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.ObtainedMarks, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ObtainedMarks, new { htmlAttributes = new { @class = "form-control", min = 0, max = 100 } })
                    @Html.ValidationMessageFor(model => model.ObtainedMarks, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-12 text-right">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
}